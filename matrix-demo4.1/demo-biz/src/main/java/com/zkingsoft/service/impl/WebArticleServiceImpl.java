package com.zkingsoft.service.impl;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.matrix.core.exception.GlobleException;
import com.matrix.core.pojo.PaginationVO;
import com.matrix.core.tools.ModelUtils;
import com.zkingsoft.bean.WebArticle;
import com.zkingsoft.dao.WebArticleDao;
import com.zkingsoft.service.WebArticleService;

/**
 * This field was generated by Zking.software.Codegen.
 * 
 * @date 2016-12-01 10:36
 */
@Service("webArticleService")
public class WebArticleServiceImpl implements WebArticleService {

	@Autowired
	private WebArticleDao webArticleDao;

	@Override
	public int add(WebArticle webArticle) {
		int i = webArticleDao.insert(webArticle);
		return i;
	}

	 

	@Override
	public int batchAdd(List<WebArticle> webArticleList) {
		return webArticleDao.batchInsert(webArticleList);
	}

	@Override
	public int modifyByMap(WebArticle oldWebArticle, WebArticle newWebArticle) {

//		if (!ModelUtils.isModified(oldWebArticle, newWebArticle)) {
//			return 1;
//		}
		Map<String, Object> modifyMap = null;
		try {
			modifyMap = ModelUtils.comparePojo2Map(oldWebArticle, newWebArticle);
		} catch (Exception e) {
			new GlobleException("数据对比失败");
		}
		if (modifyMap.size() > 0) {
			modifyMap.put("artId", oldWebArticle.getArtId());
			webArticleDao.updateByMap(modifyMap);
		}
		return 1;
	}

	@Override
	public int modifyByModel(WebArticle webArticle) {

		return webArticleDao.updateByModel(webArticle);

	}

	@Override
	public int remove(List<String> list) {

		return webArticleDao.deleteByIds(list);

	}

	@Override
	public int removeById(String artId) {

		return webArticleDao.deleteById(artId);

	}

	@Override
	public int removeByModel(WebArticle webArticle) {

		return webArticleDao.deleteByModel(webArticle);

	}

	@Override
	public List<WebArticle> findInPage(WebArticle webArticle, PaginationVO pageVo) {

		return webArticleDao.selectInPage(webArticle, pageVo);

	}

	@Override
	public List<WebArticle> findByModel(WebArticle webArticle) {

		return webArticleDao.selectByModel(webArticle);

	}

	@Override
	public int findTotal(WebArticle webArticle) {

		return webArticleDao.selectTotalRecord(webArticle);

	}

	@Override
	public WebArticle findById(String artId) {

		return webArticleDao.selectById(artId);

	}

	@Override
	public WebArticle findByTitle(String string) {
		WebArticle art = new WebArticle();
		art.setArtTitle(string);
		List<WebArticle> arts = webArticleDao.selectByModel(art);
		if (arts.size() > 0) {
			return arts.get(0);
		}
		return art;
	}

	@Override
	public List<WebArticle> findByTypeName(String string) {
		WebArticle art = new WebArticle();
		return webArticleDao.selectByModel(art);
	}

	@Override
	public WebArticle findAround(String artId, int i) {

		return webArticleDao.selectAround(artId, i);
	}

	@Override
	public List<WebArticle> findNewArticle(String artBlog, PaginationVO pageVo) {
		 
		return null;
	}

	@Override
	public List<WebArticle> findByWord(String searchWord) {
		return webArticleDao.selectByWord(searchWord);
	}



}